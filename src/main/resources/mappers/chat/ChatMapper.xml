<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team5.projrental.chat.ChatMapper">

    <insert id="insChat" useGeneratedKeys="true" keyProperty="iChat"> <!--빈 채팅방 생성-->
        INSERT INTO t_chat
        SET last_msg = NULL <!-- 마지막 보낸 메세지가 없음 -->
    </insert>



    <insert id="insChatUser">
        INSERT INTO t_chat_user
        SET ichat = #{ichat},
            iuser = #{iuser}
    </insert>


    <insert id="insChatMsg">
        <selectKey resultType="int" keyProperty="seq" order="BEFORE"> <!--BEFORE는 SELECT 먼저 실행하고 insert 실행한다는 뜻-->
            SELECT IFNULL(MAX(seq), 0) + 1 <!-- IFNULL은 최초 메세지 보낼 때 seq가 null이면 0 + 1해서 0+1 = 1로 채팅 seq(PK)번호 생성-->
            FROM t_chat_msg
            WHERE ichat = #{ichat}
        </selectKey>
        INSERT INTO t_chat_msg
        SET ichat = #{ichat}, <!--채팅방 PK-->
        seq = #{seq}, <!--메세지 PK-->
        iuser = #{loginedIuser}, <!--메세지 보내는 사람-->
        msg = #{msg} <!-- 메세지 내용-->
    </insert>


    <select id="selChatAll">
        SELECT A.ichat, A.last_msg_at AS lastMsg,
        D.iuser AS otherPersonIuser,
        D.nm AS otherPersonNm,
        D.pic AS otherPersonPic
        FROM t_chat A
        INNER JOIN t_chat_user B <!--로그인 한 유저-->
        ON A.ichat = B.ichat
        INNER JOIN t_chat_user C <!--나머지 유저-->
        ON B.ichat = C.ichat
        INNER JOIN t_user D
        ON C.iuser = D.iuser
        WHERE B.iuser = #{loginedIuser}
        AND C.iuser != #{loginedIuser}
        ORDER BY A.last_msg_at DESC
        LIMIT #{startIdx}, #{rowCount}
    </select>


    <select id="selChatMsgAll">
        SELECT
        A.seq, A.msg, A.created_at AS createdAt,
        B.iuser AS writerIuser, B.pic AS writerPic
        FROM t_chat_msg A
        INNER JOIN t_user B
        ON A.iuser = B.iuser
        WHERE A.ichat =#{ichat}
        ORDER BY A.seq DESC
        LIMIT #{startIdx}, #{rowCount}
    </select>


    <delete id="chatDelMsg">
        DELETE t_chat_msg
        WHERE ichat = #{ichat} AND iuser =#{iuser}
    </delete>


    <select id="selChatUserCheck">
        SELECT ichat
        FROM t_chat_user
        WHERE iuser = #{loginedIuser} OR iuser =#{otherPersonIuser}
        GROUP BY ichat
        HAVING COUNT(ichat) = 2
    </select>


    <update id="updChatLastMsg">
        UPDATE t_chat
        SET last_msg = #{msg}
        WHERE ichat = #{ichat}
    </update>


    <update id="updChatLastMsgAfterDelByLastMsg">
        UPDATE t_chat A
        INNER JOIN (
        SELECT ichat, msg, created_at AS createdAt
        FROM t_chat_msg
        WHERE ichat = #{ichat}
        ORDER BY seq DESC
        LIMIT 1
        ) B
        ON A.ichat = B.ichat
        SET A.last_msg = B.msg,
        A.last_msg_at = B.created_at
        WHERE A.ichat = #{ichat}
    </update>


    <select id="selOtherPersonByLoginUser">
        SELECT
        B.iuser,
        B.pic,
        B.firebase_token AS firebaseToken
        FROM t_chat_user A
        INNER JOIN t_user B
        ON A.iuser = B.iuser
        WHERE A.ichat = #{ichat}
        AND A.iuser != #{loginedIuser}
    </select>


    <update id="chatDel"> <!--숨김 처리-->
        <!--<selectKey resultType="int" keyProperty="istatus" order="BEFORE">
            SELECT
            istatus
            FROM chat_user
            WHERE iuser =#{iuser} and ichat =#{ichat}
        </selectKey>-->
        UPDATE
        t_chat_user
        SET istatus = -1
        WHERE iuser =#{iuser} AND ichat =#{ichat}
    </update>

</mapper>