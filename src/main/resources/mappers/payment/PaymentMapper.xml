<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team5.projrental.payment.PaymentMapper">
    <!--    -->
    <!--    for test-->
    <select id="getPaymentFromProductPayment">
        select ipayment from t_product_payment where iproduct = #{iproduct} and ipayment = #{ipayment}
    </select>
    <select id="getProductFromProductPayment">
        select iproduct from t_product_payment where iproduct = #{iproduct} and ipayment = #{ipayment}
    </select>
    <!--    -->
    <!--    -->

    <insert id="insPayment" useGeneratedKeys="true" keyProperty="ipayment">
        insert into t_payment (ibuyer, ipayment_method, rental_start_date, rental_end_date, rental_duration,
        price, code)
        values (#{ibuyer}, #{ipaymentMethod}, #{rentalStartDate}, #{rentalEndDate}, #{rentalDuration},
        #{price}, #{code})
    </insert>

    <insert id="insProductPayment">
        insert into t_product_payment (iproduct, ipayment)
        values (#{iproduct}, #{ipayment})
    </insert>


    <select id="checkIuserAndIproduct">
        select PA.istatus, PA.rental_end_date as rentalEndDate, P.iuser as iSeller, PA.ibuyer as iBuyer
        from t_product_payment PPA
        join t_product P on P.iproduct = PPA.iproduct
        join t_payment PA on PA.ipayment = PPA.ipayment
        where PA.ipayment = #{ipayment} and PA.istatus != -1
    </select>

    <update id="delPayment">
        update t_payment set istatus = #{istatus} where ipayment = #{ipayment}
    </update>

    <select id="getPaymentList">
        select
        U.iuser,
        U.nick,
        U.stored_pic as storedPic,
        U.request_pic as requestPic,
        PA.ipayment,
        P.iproduct,
        PA.istatus,
        PA.rental_start_date as rentalStartDate,
        PA.rental_end_date as rentalEndDate,
        PA.rental_duration as rentalDuration,
        PA.price,
        P.deposit
        <if test="flag == 1">
            , U.phone, PA.code, PA.created_at as createdAt
        </if>
        from t_payment PA
        join t_product_payment PP on PA.ipayment = PP.ipayment
        join t_product P on PP.iproduct = P.iproduct
        join t_user U on U.iuser =
        <if test="role != null and role == 1">
            P.iuser
        </if>
        <if test="role != null and role == 2">
            PA.ibuyer
        </if>
        <if test="role == null or role == 0">
            P.iuser or U.iuser = PA.ibuyer
        </if>
        <where>
            PA.istatus in (-3, -2, 0, 1, 2, 3)
            <if test="role != null and role == 1">
                and PA.ibuyer = #{iuser}
            </if>
            <if test="role != null and role == 2">
                and P.iuser = #{iuser}
            </if>
            <if test="flag == 1">
                and U.iuser != #{iuser} and PA.ipayment = #{ipayment}
            </if>
        </where>
        limit #{page}, #{paymentPerPage}
    </select>

    <update id="updateIstatusOverRentalEndDate">
        update t_payment set istatus = -4
        where rental_end_date <![CDATA[<]]> #{now} and istatus in (0, 2, 3)
    </update>
</mapper>