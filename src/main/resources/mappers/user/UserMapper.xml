<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team5.projrental.user.UserMapper">
    <insert id="insUser" useGeneratedKeys="true"  keyProperty="iuser">
        INSERT INTO t_user
        SET addr = #{addr}
        , rest_addr = #{restAddr}
        , uid = #{uid}
        , upw = #{upw}
        , nick = #{nick}
        <if test=" pic != null and pic != '' ">
            , stored_pic = #{pic}
            , request_pic = #{pic}
        </if>
        , phone = #{phone}
        , email = #{email}
        , y = #{y}
        , x = #{x}
    </insert>


    <select id="selSignin">
        SELECT u.iuser, a.auth, u.upw, u.uid, firebase_token AS firebaseToken
        FROM t_user u
        JOIN t_auth a
        ON a.iauth = u.iauth
        WHERE u.uid = #{uid}
    </select>

    <update id="updUserFirebaseToken">
        UPDATE t_user
        SET firebase_token = #{firebaseToken}
        WHERE iuser = #{iuser}
    </update>

    <select id="selFindUid">
        SELECT uid, iuser
        FROM t_user
        WHERE phone = #{phone}
    </select>

    <update id="upFindUpw">
        UPDATE t_user
        SET upw = #{upw}
        WHERE phone = #{phone}
        and uid = #{uid}
    </update>

    <update id="changeUser">
        UPDATE t_user
        <set>
            <if test="nick != null and nick != '' ">
                nick =#{nick}
            </if>
            <if test="pic != null and pic != '' ">
                ,stored_pic =#{pic}
            </if>
            <if test="upw != null and upw != '' ">
                ,upw =#{upw}
            </if>
            <if test="phone != null and phone != '' ">
                ,phone =#{phone}
            </if>
            <if test="addr != null and addr != '' ">
                , addr = #{addr}
                , y = #{y}
                , x = #{x}
            </if>
            <if test="restAddr != null and restAddr != '' ">
                ,rest_addr =#{restAddr}
            </if>
            <if test="email != null and email != '' ">
                ,email = #{email}
            </if>

        </set>
        where iuser = #{iuser}
    </update>

    <delete id="delUser">
        DELETE FROM t_user
        WHERE iuser = #{iuser}
        and uid = #{uid}
        and phone = #{phone}
    </delete>
    <select id="seldelUserPay">
        select P.iproduct, U.iuser, P.istatus as pistatus, PA.istatus
        from t_product P
        join t_user U on P.iuser = U.iuser and P.istatus IN (-1, -2)
        left join t_product_payment PP on PP.iproduct = P.iproduct
        left join t_payment PA on PA.ipayment = PP.ipayment  AND PA.istatus IN (1, -1, -2, -3)
        where P.iuser = #{iuser}
        or PA.ibuyer = #{iuser}
    </select>
    <update id="delUpUserPay">
        update t_payment
        set ibuyer = null
        where ibuyer = #{iuser}
    </update>

    <delete id="delUserProPic">
        DELETE FROM t_pics
        where iproduct = #{iproduct}
    </delete>
    <delete id="delUserPorc2">
        DELETE FROM t_product_payment
        where iproduct = #{iproduct}
    </delete>
    <delete id="delUserPorc">
        DELETE FROM t_product
        where iuser = #{iuser}
    </delete>

    <select id="selUser">
        SELECT y, x, nick, stored_pic, phone, email, raiting, CONCAT_WS(addr, rest_addr)
        FROM t_user
        WHERE iuser = #{iuser}
    </select>

    <!--예외처리-->

    <select id="patchUser">
        select P.iproduct
        from t_product P
        join t_user U on P.iuser = U.iuser
        left join t_product_payment PP on PP.iproduct = P.iproduct
        left join t_payment PA on PA.ipayment = PP.ipayment
        where P.iuser = #{iuser}
        or PA.ibuyer = #{iuser}
    </select>
</mapper>